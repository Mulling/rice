#!/bin/sh

# stolen form tsoding

declare -A arr

# .bashrc
arr["$HOME/dots/.bashrc"]="$HOME/.bashrc"

# git config
arr["$HOME/dots/.gitconfig"]="$HOME/.gitconfig"

# emacs init.el
# arr["$HOME/dots/.emacs.d/init.el"]="$HOME/.emacs.d/init.el"

# ghci
# arr["$HOME/dots/.ghci"]="$HOME/.ghci"

# neo vim init.vim
arr["$HOME/dots/.config/nvim/init.vim"]="$HOME/.config/nvim/init.vim"

# neo vim colorscheme
arr["$HOME/dots/.config/nvim/colors/based.vim"]="$HOME/.config/nvim/colors/based.vim"

for key in ${!arr[@]}; do

    if [ ! -d $(dirname "${arr[${key}]}") ]; then
        printf "\x1b[33m » mkdir $(dirname "${arr[${key}]}")"
        mkdir -p $(dirname "${arr[${key}]}")
    fi

    if [ ! -L ${arr[${key}]} ]; then
        if [ -e ${arr[${key}]} ]; then
            printf "\x1b[31m » \x1b[m${arr[${key}]} alredy exists, and its is not a syslink\n" && exit 1
        else
            ln -s ${key} ${arr[${key}]}
            printf "\x1b[33m » \x1b[ln -s ${key} -> ${arr[${key}]}\n"
        fi
    else
        printf "\x1b[32m » \x1b[m${key} is already syslinked\n"
    fi
done
